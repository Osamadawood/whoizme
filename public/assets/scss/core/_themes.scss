@use "sass:map";
@use "sass:meta";
@use "brand" as brand;

@mixin emit() {

  $brand-vars: meta.module-variables(brand);

  $colors-dark: if(
    map.has-key($brand-vars, "colors-dark"),
    map.get($brand-vars, "colors-dark"),
    (
      bg: #0b0f14,
      surface: #0f141b,
      surface-2: #131a23,
      border: #2a3340,
      text: #e8eef6,
      text-muted: #9aa8bb,
      brand: #5b8cff,
      brand-contrast: #0b0f14,
      accent: #7ad8cf,
      accent-2: #a485ff,
      ok: #22c55e,
      warn: #f59e0b,
      info: #38bdf8,
      danger: #ef4444
    )
  );

  $colors-light: if(
    map.has-key($brand-vars, "colors-light"),
    map.get($brand-vars, "colors-light"),
    (
      bg: #ffffff,
      surface: #f7f8fa,
      surface-2: #eef2f7,
      border: #d6e0ea,
      text: #0b1220,
      text-muted: #5a6a81,
      brand: #2b5cff,
      brand-contrast: #ffffff,
      accent: #0ea5a3,
      accent-2: #6b4dff,
      ok: #16a34a,
      warn: #d97706,
      info: #0284c7,
      danger: #dc2626
    )
  );

  /* Radii/Spacing/Type/Shadows (فالباك لو مش موجودة في brand) */
  $radii: if(
    map.has-key($brand-vars, "radii"),
    map.get($brand-vars, "radii"),
    (xs: 4px, sm: 6px, md: 8px, lg: 12px, xl: 16px, pill: 999px)
  );

  $spacing: if(
    map.has-key($brand-vars, "spacing"),
    map.get($brand-vars, "spacing"),
    (1: .25rem, 2: .5rem, 3: .75rem, 4: 1rem, 5: 1.25rem, 6: 1.5rem, 8: 2rem, 10: 2.5rem)
  );

  $type-scale: if(
    map.has-key($brand-vars, "type-scale"),
    map.get($brand-vars, "type-scale"),
    (
      h1: (size: 2rem,    lh: 1.2),
      h2: (size: 1.625rem, lh: 1.25),
      h3: (size: 1.375rem, lh: 1.3),
      body: (size: 1rem,   lh: 1.6),
      small: (size: .875rem, lh: 1.5)
    )
  );

  $shadows: if(
    map.has-key($brand-vars, "shadows"),
    map.get($brand-vars, "shadows"),
    (
      sm: 0 1px 2px rgba(0,0,0,.12),
      md: 0 6px 16px rgba(0,0,0,.16),
      lg: 0 12px 28px rgba(0,0,0,.2)
    )
  );

  /* - Root variables العامة (فونت/راديوس/سبايسنج/تيبو/شادو) - */
  @layer base {
    :root {
      --font-sans: "Montserrat", ui-sans-serif, system-ui, -apple-system, "Segoe UI",
                   Roboto, "Helvetica Neue", Arial, "Noto Sans", "Apple Color Emoji",
                   "Segoe UI Emoji","Segoe UI Symbol";

      @each $k, $v in $radii   { --radius-#{$k}: #{$v}; }
      @each $k, $v in $spacing { --sp-#{$k}: #{$v}; }
      @each $name, $conf in $type-scale {
        --#{$name}-size: #{map.get($conf, size)};
        --#{$name}-lh:   #{map.get($conf, lh)};
      }
      @each $k, $v in $shadows { --shadow-#{$k}: #{$v}; }
    }
  }

  /* - ثيم داكن (افتراضي) - */
  :root,
  :root[data-theme="dark"] {
    @each $k, $v in $colors-dark { --#{$k}: #{$v}; }
  }

  /* - ثيم فاتح - */
  :root[data-theme="light"] {
    @each $k, $v in $colors-light { --#{$k}: #{$v}; }
  }
}

@layer base {
  /* Base tokens fallbacks — always defined regardless of load order */
  :root[data-theme="dark"] {
    // --page-bg: #0e0e0e;
    --page-bg: rgba(5,8,17,1.0);
    --surface: #13151a;
    --border: #22252d;
    --text: #e7e9ee;
    --muted: #a6adbb;
    --brand: #6c47ff; /* primary */
    --radius-full:200px;
  }

  :root[data-theme="light"] {
    --page-bg: #ffffff;
    --surface: #f6f7f9;
    --border: #e6e8ee;
    --text: #111318;
    --muted: #6b7280;
    --brand: #5b7cfa;
    --radius-full:200px;
  }

  /* Guarantee page colors even if a page forgets to set them */
  html, body {
    background: var(--page-bg);
    color: var(--text);
  }
}

.mainFooter{
  margin-top: 2rem;
}